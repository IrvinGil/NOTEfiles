#Clean Code:
1. "Like well written prose"
2. "Written by someone who cares"
3. "Does one thing well"
4. "It's testable"

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

#Why write clean code?
1. "It encourages collaboration"
2. "We write solutions, not code"
3. "Code is read by people"
4. "Technical debt is inevitable"
5. "Clean code is ethical"



#What clean code is not:
1. "There's no one way to do it"
2. " 




#Clean Code Advantages:
1. Improves code reusability
2. Lessens the probability of bugs due to the reusability of "already tested" code
3. Small functions makes it easy to indentify and locate bugs.
4. Makes code easy to read. Sometimes only read once and not twice or thrice.
5. Small functions are: 
    * Easy to understand
    * Easy to debug
    * Easy to reuse
    * Easy to test
    * Avoids code repetition
    * Beautifies code
    * Separate concepts into their levels of abstraction
    * Easy to keep bug free
    * and overall easy to maintain
6. Low complexity

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>



#Some Clean Code Rules:
1. Single Responsibility Principle: A method/funtion should have one responsibility
2. Write code in small functions.

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

#NAMING CONVENTIONS

#Some rules in variable naming 




>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

Note:
1. will use spock as framework for unit testing!
2. 
