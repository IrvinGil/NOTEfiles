
---


1. @RestControllerAdvice - allows us to handle exception across all application


422 response code for the product with existing name on the database ( the response message is up to you )



- The spec/test classes that are in the /test directory contains tests for classes with public
access modifiers. But you can also add test for the methods that are have package level access
modifiers and just put the spec/test file on the same package directory.

*how to validate request body or request parameters*
Answer: @NotNull //Bean Validation package


advice:
- splice functions into small unit and somehow separate it into another class to keep the methods small
and unit test can be easily made into the function.
- unit test also serve as a documentation, so make the unit test name as descriptive as possible.
- 

>>>>>>>

entity -create table

using a sequence table (company practice)

scrpts and sql are written in snake_case.

research about primary key and foreign key.

for @JoinColumns: it will always focus on the foreign key as reference for column name.

table names and column names are set to singular by company practice.\

for every entity, the name of the sequence processor must be unique.

*research for types of *cascades*. and also what it does and what it means. 







---





select nextval('<sequence_name>');
select * <table_name>;




load database tables: `\dt`





















